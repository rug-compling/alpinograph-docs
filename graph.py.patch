--- pygments/lexers/graph.py.ori	2021-05-20 16:42:35.593893193 +0200
+++ pygments/lexers/graph.py	2021-08-16 11:51:53.241194634 +0200
@@ -24,61 +24,69 @@
     <https://neo4j.com/docs/developer-manual/3.3/cypher/>`_
 
     For the Cypher version in Neo4j 3.3
 
     .. versionadded:: 2.0
     """
     name = 'Cypher'
     aliases = ['cypher']
     filenames = ['*.cyp', '*.cypher']
 
-    flags = re.MULTILINE | re.IGNORECASE
+    flags = re.IGNORECASE
 
     tokens = {
         'root': [
             include('comment'),
             include('keywords'),
             include('clauses'),
+            include('macro'),
             include('relations'),
             include('strings'),
             include('whitespace'),
             include('barewords'),
         ],
         'comment': [
-            (r'^.*//.*\n', Comment.Single),
+            (r'--.*', Comment.Single),
         ],
         'keywords': [
             (r'(create|order|match|limit|set|skip|start|return|with|where|'
+             r'select|from|'
              r'delete|foreach|not|by|true|false)\b', Keyword),
         ],
         'clauses': [
             # based on https://neo4j.com/docs/cypher-refcard/3.3/
-            (r'(all|any|as|asc|ascending|assert|call|case|create|'
+            (r'(all|and|any|as|asc|ascending|assert|call|case|create|'
              r'create\s+index|create\s+unique|delete|desc|descending|'
-             r'distinct|drop\s+constraint\s+on|drop\s+index\s+on|end|'
-             r'ends\s+with|fieldterminator|foreach|in|is\s+node\s+key|'
+             r'distinct|drop\s+constraint\s+on|drop\s+index\s+on|'
+             r'ends\s+with|exists|fieldterminator|foreach|in|is\s+node\s+key|'
              r'is\s+null|is\s+unique|limit|load\s+csv\s+from|match|merge|none|'
-             r'not|null|on\s+match|on\s+create|optional\s+match|order\s+by|'
+             r'not|null|on\s+match|on\s+create|optional\s+match|or|order\s+by|'
              r'remove|return|set|skip|single|start|starts\s+with|then|union|'
+             r'except|intersect|'
              r'union\s+all|unwind|using\s+periodic\s+commit|yield|where|when|'
              r'with)\b', Keyword),
         ],
         'relations': [
             (r'(-\[)(.*?)(\]->)', bygroups(Operator, using(this), Operator)),
             (r'(<-\[)(.*?)(\]-)', bygroups(Operator, using(this), Operator)),
             (r'(-\[)(.*?)(\]-)', bygroups(Operator, using(this), Operator)),
             (r'-->|<--|\[|\]', Operator),
             (r'<|>|<>|=|<=|=>|\(|\)|\||:|,|;', Punctuation),
             (r'[.*{}]', Punctuation),
         ],
         'strings': [
+            (r'"([^"\n]|"")*"', String),
+            (r"'([^'\n]|'')*'", String),
             (r'"(?:\\[tbnrf\'"\\]|[^\\"])*"', String),
             (r'`(?:``|[^`])+`', Name.Variable),
         ],
         'whitespace': [
             (r'\s+', Whitespace),
         ],
         'barewords': [
             (r'[a-z]\w*', Name),
             (r'\d+', Number),
         ],
+        'macro': [
+            (r"%[^%\n]+%", Comment.Preproc),
+        ]
     }
